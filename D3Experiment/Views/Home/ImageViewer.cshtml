@{
    ViewData["Title"] = "ImageViewer";
}
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
<link href="~/lib/viewerjs/viewer.css" rel="stylesheet">
<script src="~/lib/viewerjs/viewer.js"></script>
<script>
    let viewer;
    function previewFile() {
        var preview = document.querySelector('img');
        var file = document.querySelector('input[type=file]').files[0];
        var reader = new FileReader();

        reader.addEventListener("load", function () {
            preview.src = reader.result;

        }, false);

        if (file) {
            reader.readAsDataURL(file);
        }
    }

    let openViewer = function (elementId) {
        // View an image
        var preview = document.querySelector('img');
        console.log(preview.id);
        if (preview) {
            viewer = new Viewer(document.getElementById(elementId), {
                inline: true,
                viewed() {
                    viewer.zoomTo(1);
                },
            });
        }

    }

    let openGallery = function () {

        const gallery = new Viewer(document.getElementById('images'), {
            hidden: function(){
                gallery.destroy();
            },
            viewed() {
                gallery.zoomTo(1);
            },

        });
        gallery.show();
    };
    let destroyGallery = function () {
        gallery.destroy();
    }
    let destroyViewer = function () {
        viewer.destroy();
    }

    let sendImage = function (elementId) {
        var preview = document.getElementById(elementId);
        console.log(preview.src);
        var payload = { "ImageString" : preview.src };
        PostImageGetJson("@Url.Action("PostImage", "Home")", payload)
            .then(function (data) {
                if (data.result) {

                    document.getElementById("image1").src = data.response.imageString;
                };
            });
        PostImageGetBlob("@Url.Action("ImageResult", "Home")", payload)
            .then(function (data) {
                if (data.result) {
                    document.getElementById("image2").src = URL.createObjectURL(data.response);
                }
            });;

    }
    function status(response) {
        if (response.status >= 200 && response.status < 300) {
            return Promise.resolve(response)
        } else {
            return Promise.reject(new Error(response.statusText))
        }
    }

    function json(response) {
        return response.json()
    }


    let PostImageGetJson = function (url, payload) {
        return fetch(url, {
            method: 'post',
                headers: {
      'Content-Type': 'application/json'
    },
            body: JSON.stringify(payload)
        })
            .then(status)
            .then(json)
            .then(function (data) {
                console.log('Request succeeded with response', data);
                return { result: true, response: data };
            })
            .catch(function (error) {
                console.log('Request failed', error);
                return { result: false, response: error };
            });
    }
    let PostImageGetBlob = function (url, payload) {
        return fetch(url, {
            method: 'post',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload)
        })
            .then(status)
            .then((response)=> response.blob())
            .then(function (data) {
                console.log('Request succeeded with response', data);
                return { result: true, response: data };
            })
            .catch(function (error) {
                console.log('Request failed', error);
                return { result: false, response: error };
            });
    }
</script>
<h1>ImageViewer</h1>

<!-- Learn about this code on MDN: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL -->
<div>
    <input type="file" onchange="previewFile()"><br>
</div>
<div>
    <ul id="images">
        <li>

            <img id="preview" src="" height="200" alt="Image preview..." />
        </li>

        <li>
            <img id="image1" src="" style="width:50%; height:50%" alt="data uri" />
        </li>
        <li>
            <img id="image2" src="" style="width:50%; height:50%" alt="file result" />
        </li>
    </ul>
</div>


<div>
    <button onclick="openViewer('preview')">Open Viewer</button>
    <button onclick="destroyViewer()">Close Viewer</button>
    <button onclick="sendImage('preview')">Send Image</button>
    <button data-enable="modal" data-method="show" onclick="openGallery()">Open Gallery</button>
</div>

<button type="button" class="btn btn-primary" data-target="#modal" data-toggle="modal" onclick="openGallery()">
    Launch the demo
</button>

<!-- Modal -->
<div class="modal fade" id="modal" role="dialog" aria-labelledby="modalLabel" tabindex="-1">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Viewer</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modal-container">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
